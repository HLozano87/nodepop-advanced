openapi: 3.0.4
info:
  title: Nodepop-API
  version: 1.0.0
  description: API RESTful para la gestión de productos, incluyendo relación con usuarios.

paths:
  /api/login:
    post:
      summary: Iniciar sesión y obtener para token
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
              type: object
              properties:
                email:
                  type: string
                  example: string
                password:
                  type: string
                  example: string
      responses:
        "200":
          description: ""

  /api/products:
    get:
      summary: Obtener todos los productos
      tags:
        - products
      security:
        - Authorization: []
      responses:
        "200":
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
    post:
      summary: Crear un nuevo producto
      tags:
        - products
      security:
        - Authorization: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - name
                - price
                - tags
              properties:
                name:
                  type: string
                price:
                  type: number
                  format: float
                  minimum: 1
                tags:
                  type: array
                  items:
                    type: string
                    enum: [work, mobile, motor, lifestyle]
                image:
                  type: string
                  format: binary
      responses:
        "201":
          description: Producto creado exitosamente
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"

  /api/tags:
    get:
      summary: Obtener lista de tags disponibles
      tags:
        - products
      security:
        - Authorization: []
      responses:
        "200":
          description: Lista de tags válidos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  enum: [work, mobile, motor, lifestyle]
        "401":
          description: No autorizado - token no válido o ausente

  /api/products/{productId}:
    get:
      summary: Obtener un producto por ID
      tags:
        - products
      security:
        - Authorization: []
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado

    put:
      summary: Actualizar un producto
      tags:
        - products
      security:
        - Authorization: []
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                  format: float
                  minimum: 1
                tags:
                  type: array
                  items:
                    type: string
                    enum: [work, mobile, motor, lifestyle]
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: Producto actualizado exitosamente
          content:
            multipart-form:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Producto no encontrado

    delete:
      summary: Eliminar un producto
      tags:
        - products
      security:
        - Authorization: []
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Producto eliminado correctamente
        "404":
          description: Producto no encontrado

components:
  schemas:
    Product:
      type: object
      required:
        - name
        - price
        - tags

      properties:
        name:
          type: string

        price:
          type: number
          format: number
          minimum: 1
        tags:
          type: array
          items:
            type: string
            enum: [work, mobile, motor, lifestyle]
          example: ["motor", "lifestyle"]
        image:
          type: string
          format: uri
          example: "1750075050635-name.jpg"
        createdAt:
          type: string
          format: date-time
          example: "2025-06-23T14:30:00.000Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-06-23T15:45:00.000Z"

    Login:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string

        password:
          type: string

  securitySchemes:
    Authorization:
      type: apiKey
      in: header
      name: Authorization
